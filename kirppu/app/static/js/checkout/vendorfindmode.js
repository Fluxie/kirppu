// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.VendorFindMode = (function(_super) {
    __extends(VendorFindMode, _super);

    function VendorFindMode() {
      this.createRow = __bind(this.createRow, this);
      this.onVendorsFound = __bind(this.onVendorsFound, this);
      return VendorFindMode.__super__.constructor.apply(this, arguments);
    }

    ModeSwitcher.registerEntryPoint("vendor_find", VendorFindMode);

    VendorFindMode.prototype.title = function() {
      return "Vendor Search";
    };

    VendorFindMode.prototype.columns = function() {
      return ['<th class="receipt_index">#</th>', '<th class="receipt_code">id</th>', '<th class="receipt_item">name</th>', '<th class="receipt_item">email</th>', '<th class="receipt_item">phone</th>'].map($);
    };

    VendorFindMode.prototype.actions = function() {
      return [
        [
          "", (function(_this) {
            return function(query) {
              return Api.vendor_find({
                q: query
              }).done(_this.onVendorsFound);
            };
          })(this)
        ]
      ];
    };

    VendorFindMode.prototype.onVendorsFound = function(vendors) {
      var index, vendor, _i, _len, _results;
      this.clearReceipt();
      _results = [];
      for (index = _i = 0, _len = vendors.length; _i < _len; index = ++_i) {
        vendor = vendors[index];
        _results.push(this.cfg.uiRef.receiptResult.append(this.createRow(index + 1, vendor)));
      }
      return _results;
    };

    VendorFindMode.prototype.createRow = function(index, vendor) {
      var a, row, switcher, _i, _len, _ref;
      row = $("<tr>");
      row.append($("<td>").text(index));
      _ref = ['id', 'name', 'email', 'phone'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        a = _ref[_i];
        row.append.apply(row, $("<td>").text(vendor[a]));
      }
      switcher = this.switcher;
      return row.click(function(event) {
        return switcher.switchTo(vendorReport(vendor));
      });
    };

    return VendorFindMode;

  })(CheckoutMode);

}).call(this);
