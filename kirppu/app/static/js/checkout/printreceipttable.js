// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  this.PrintReceiptTable = (function(_super) {
    __extends(PrintReceiptTable, _super);

    PrintReceiptTable.strCode = "code";

    PrintReceiptTable.strItem = "item";

    PrintReceiptTable.strPrice = "price";

    PrintReceiptTable.strVendor = "vendor";

    function PrintReceiptTable() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      PrintReceiptTable.__super__.constructor.apply(this, args);
      this.head.append(["<th class=\"receipt_index\">" + this.constructor.strVendor + "</th>", "<th class=\"receipt_code\">" + this.constructor.strCode + "</th>", "<th class=\"receipt_item\">" + this.constructor.strItem + "</th>", "<th class=\"receipt_price\">" + this.constructor.strPrice + "</th>"].map($));
    }

    PrintReceiptTable.joinedLine = function(text, html) {
      if (text == null) {
        text = "";
      }
      if (html == null) {
        html = false;
      }
      return $("<tr>").append($('<td colspan="4">')[html ? "html" : "text"](text));
    };

    PrintReceiptTable.createRow = function() {
      var args, price, rounded, row, x, _i, _j, _len, _ref;
      args = 3 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 2) : (_i = 0, []), price = arguments[_i++], rounded = arguments[_i++];
      row = $("<tr>");
      _ref = __slice.call(args).concat([displayPrice(price, rounded)]);
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        x = _ref[_j];
        row.append($("<td>").text(x));
      }
      return row;
    };

    return PrintReceiptTable;

  })(ResultTable);

}).call(this);
