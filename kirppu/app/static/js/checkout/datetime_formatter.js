// Generated by CoffeeScript 1.7.1
(function() {
  var __slice = [].slice;

  this.DateTimeFormatter = (function() {
    function DateTimeFormatter() {}

    DateTimeFormatter.timeZone = null;

    DateTimeFormatter.locales = null;

    DateTimeFormatter._createDateOptions = function() {
      return {
        timeZone: DateTimeFormatter.timeZone
      };
    };

    DateTimeFormatter._dateSupportsLocales = function(fn) {
      var e;
      try {
        new Date()[fn]("i");
      } catch (_error) {
        e = _error;
        return e.name === "RangeError";
      }
      return false;
    };

    DateTimeFormatter._buildSupport = function() {
      var arg, args, r, _i, _len;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      r = {};
      for (_i = 0, _len = args.length; _i < _len; _i++) {
        arg = args[_i];
        r[arg] = this._dateSupportsLocales(arg);
      }
      return r;
    };

    DateTimeFormatter._dateSupport = DateTimeFormatter._buildSupport("toLocaleDateString", "toLocaleTimeString", "toLocaleString");

    DateTimeFormatter._callDateLocale = function(dateStr, fn) {
      var dateObj;
      dateObj = new Date(dateStr);
      if (this._dateSupport[fn]) {
        return dateObj[fn](this.locales, this._createDateOptions());
      } else {
        return dateObj[fn]();
      }
    };

    DateTimeFormatter.date = function(value) {
      return this._callDateLocale(value, "toLocaleDateString");
    };

    DateTimeFormatter.time = function(value) {
      return this._callDateLocale(value, "toLocaleTimeString");
    };

    DateTimeFormatter.datetime = function(value) {
      return this._callDateLocale(value, "toLocaleString");
    };

    return DateTimeFormatter;

  })();

}).call(this);
