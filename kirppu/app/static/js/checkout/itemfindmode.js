// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ItemFindMode = (function(_super) {
    __extends(ItemFindMode, _super);

    function ItemFindMode() {
      return ItemFindMode.__super__.constructor.apply(this, arguments);
    }

    ItemFindMode.prototype.title = function() {
      return "Find";
    };

    ItemFindMode.prototype.subtitle = function() {
      return "" + this.cfg.settings.clerkName + " @ " + this.cfg.settings.counterName;
    };

    ItemFindMode.prototype.initialMenuEnabled = true;

    ItemFindMode.prototype.onFormSubmit = function(input) {
      return Api.findItem(input, this);
    };

    ItemFindMode.prototype.onResultSuccess = function(data) {
      var row;
      row = this.createRow("?", data.code, data.name, data.price);
      return this.cfg.uiRef.receiptResult.append(row);
    };

    ItemFindMode.prototype.onResultError = function(jqXHR) {
      if (jqXHR.status === 404) {
        alert("No such item");
        return;
      }
      return true;
    };

    return ItemFindMode;

  })(ItemCheckoutMode);

  this.ModeSwitcher.registerEntryPoint("reports", ItemFindMode);

}).call(this);
