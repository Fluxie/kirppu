// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.StatusMode = (function(_super) {
    __extends(StatusMode, _super);

    ModeSwitcher.registerEntryPoint("status_mode", StatusMode);

    StatusMode.prototype.title = function() {
      return "Status Mode";
    };

    function StatusMode() {
      this.onGotStats = __bind(this.onGotStats, this);
      StatusMode.__super__.constructor.apply(this, arguments);
    }

    StatusMode.prototype.enter = function() {
      var canvas;
      StatusMode.__super__.enter.apply(this, arguments);
      canvas = $('<div id="flots_canvas" style="width: 600px; height: 300px"">');
      this.cfg.uiRef.body.append(canvas);
      return Api.get_stats().done(this.onGotStats);
    };

    StatusMode.prototype.onGotStats = function(stats) {
      var euroFormatter;
      euroFormatter = function(v, axis) {
        return v.toFixed(axis.tickDecimals) + "â‚¬";
      };
      return $.plot("#flots_canvas", [
        {
          data: stats['unsold'],
          label: 'Unsold'
        }, {
          data: stats['money'],
          label: 'Money'
        }
      ], {
        series: {
          lines: {
            show: true
          },
          points: {
            show: true
          }
        },
        xaxis: {
          mode: "time"
        },
        yaxis: {
          tickFormatter: euroFormatter
        }
      });
    };

    return StatusMode;

  })(CheckoutMode);

}).call(this);
