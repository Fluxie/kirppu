// Generated by CoffeeScript 1.7.1
(function() {
  var Config;

  Config = (function() {
    function Config() {}

    Config.prototype.uiId = {
      container: null,
      body: null,
      glyph: null,
      stateText: null,
      subtitleText: null,
      codeInput: null,
      codeForm: null,
      modeMenu: null,
      dialog: null
    };

    Config.prototype.uiRef = {
      container: null,
      body: null,
      glyph: null,
      stateText: null,
      subtitleText: null,
      codeInput: null,
      codeForm: null,
      modeMenu: null,
      dialog: null
    };

    Config.prototype.settings = {
      itemPrefix: null,
      clerkPrefix: "::",
      counterPrefix: ":*",
      removeItemPrefix: "-",
      payPrefix: "+",
      abortPrefix: null,
      logoutPrefix: null,
      counterCode: null,
      clerkName: null
    };

    Config.prototype.check = function() {
      var element, errors, key, value, _ref;
      errors = false;
      _ref = this.uiId;
      for (key in _ref) {
        value = _ref[key];
        element = $("#" + value);
        if (!((element != null) && element.length === 1)) {
          console.error("Name " + value + " does not identify an element for " + key + ".");
          errors = true;
          continue;
        }
        this.uiRef[key] = element;
      }
      return errors;
    };

    return Config;

  })();

  window.CheckoutConfig = new Config();

  Number.FRACTION_LEN = 2;

  Number.FRACTION = Math.pow(10, Number.FRACTION_LEN);

  Number.prototype.formatCents = function() {
    var fraction, fraction_len, fraction_str, ignored, wholes, _i, _ref;
    wholes = Math.floor(Math.abs(this / Number.FRACTION));
    fraction = Math.abs(this % Number.FRACTION);
    fraction_str = "";
    fraction_len = ("" + fraction).length;
    for (ignored = _i = fraction_len, _ref = Number.FRACTION_LEN; fraction_len <= _ref ? _i < _ref : _i > _ref; ignored = fraction_len <= _ref ? ++_i : --_i) {
      fraction_str += "0";
    }
    fraction_str += fraction;
    if (this < 0) {
      wholes = "-" + wholes;
    }
    return wholes + "." + fraction_str;
  };

  String.prototype.parseCents = function() {
    var cents, fraction, fraction_exp, matcher, pat, wholes;
    pat = /^(-?)(\d*)(?:[,.](\d*))?$/;
    matcher = pat.exec(this);
    if (matcher == null) {
      return null;
    }
    if (matcher[1] == null) {
      matcher[1] = "";
    }
    if (matcher[2] == null) {
      matcher[2] = "0";
    }
    if (matcher[3] == null) {
      matcher[3] = "0";
    }
    wholes = matcher[2] - 0;
    fraction = matcher[3] - 0;
    fraction_exp = Math.pow(10, Number.FRACTION_LEN - matcher[3].length);
    fraction = Math.round(fraction * fraction_exp);
    cents = wholes * Number.FRACTION;
    if (matcher[1] !== "-") {
      cents += fraction;
    } else {
      cents = -cents - fraction;
    }
    return cents;
  };

}).call(this);
