// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.CheckoutMode = (function() {
    function CheckoutMode(switcher, config) {
      this.clearReceipt = __bind(this.clearReceipt, this);
      this.cfg = config ? config : CheckoutConfig;
      this.uiEnabled = {
        receipt: false
      };
      this.switcher = switcher;
    }

    CheckoutMode.prototype.switchTo = function(mode) {
      return this.switcher.switchTo(mode);
    };

    CheckoutMode.prototype.title = function() {
      return "[unknown mode]";
    };

    CheckoutMode.prototype.subtitle = function() {
      return null;
    };

    CheckoutMode.prototype.initialMenuEnabled = null;

    CheckoutMode.prototype.onPreBind = function() {
      return true;
    };

    CheckoutMode.prototype.bind = function(form, input) {
      if (form == null) {
        form = this.cfg.uiRef.codeForm;
      }
      if (input == null) {
        input = this.cfg.uiRef.codeInput;
      }
      form.off("submit");
      form.submit((function(_this) {
        return function(event) {
          var ret, value;
          value = input.val();
          ret = _this.onFormSubmit(value);
          if (ret) {
            input.val("");
          } else {
            console.error("Input not accepted: '" + value + "', ret=" + ret + ", this=" + _this.constructor.name);
          }
          return event.preventDefault();
        };
      })(this));
      this.cfg.uiRef.stateText.text(this.title());
      this.cfg.uiRef.subtitleText.text(this.subtitle() || "");
      if (this.initialMenuEnabled != null) {
        this.switcher.setMenuEnabled(this.initialMenuEnabled);
      }
    };

    CheckoutMode.prototype.onPreUnBind = function() {
      return true;
    };

    CheckoutMode.prototype.unbind = function() {};

    CheckoutMode.prototype.onFormSubmit = function(input) {
      return false;
    };

    CheckoutMode.prototype.columns = function() {
      return [];
    };

    CheckoutMode.prototype.clearReceipt = function() {
      return $("#receipt_table").empty().append($("<thead>").append($("<tr>").append(this.columns())), this.cfg.uiRef.receiptResult.empty());
    };

    return CheckoutMode;

  })();

}).call(this);
