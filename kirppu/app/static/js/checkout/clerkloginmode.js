// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ClerkLoginMode = (function(_super) {
    __extends(ClerkLoginMode, _super);

    function ClerkLoginMode() {
      this.onResultError = __bind(this.onResultError, this);
      this.onResultSuccess = __bind(this.onResultSuccess, this);
      return ClerkLoginMode.__super__.constructor.apply(this, arguments);
    }

    ModeSwitcher.registerEntryPoint("clerk_login", ClerkLoginMode);

    ClerkLoginMode.prototype.title = function() {
      return "Locked";
    };

    ClerkLoginMode.prototype.subtitle = function() {
      return "Login...";
    };

    ClerkLoginMode.prototype.enter = function() {
      ClerkLoginMode.__super__.enter.apply(this, arguments);
      return this.switcher.setMenuEnabled(false);
    };

    ClerkLoginMode.prototype.actions = function() {
      return [
        [
          this.cfg.settings.clerkPrefix, (function(_this) {
            return function(code, prefix) {
              return Api.clerk_login({
                code: prefix + code,
                counter: _this.cfg.settings.counterCode
              }).then(_this.onResultSuccess, _this.onResultError);
            };
          })(this)
        ]
      ];
    };

    ClerkLoginMode.prototype.onResultSuccess = function(data) {
      var username;
      username = data["user"];
      this.cfg.settings.clerkName = username;
      console.log("Logged in as " + username + ".");
      return this.switcher.switchTo(CounterMode);
    };

    ClerkLoginMode.prototype.onResultError = function(jqXHR) {
      if (jqXHR.status === 419) {
        console.log("Login failed: " + jqXHR.responseJSON["message"]);
        return;
      }
      return true;
    };

    return ClerkLoginMode;

  })(CheckoutMode);

}).call(this);
