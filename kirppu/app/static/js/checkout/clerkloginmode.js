// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ClerkLoginMode = (function(_super) {
    __extends(ClerkLoginMode, _super);

    function ClerkLoginMode() {
      this.onResultError = __bind(this.onResultError, this);
      this.onResultSuccess = __bind(this.onResultSuccess, this);
      return ClerkLoginMode.__super__.constructor.apply(this, arguments);
    }

    ModeSwitcher.registerEntryPoint("clerk_login", ClerkLoginMode);

    ClerkLoginMode.prototype.title = function() {
      return "Locked";
    };

    ClerkLoginMode.prototype.subtitle = function() {
      return "Login...";
    };

    ClerkLoginMode.prototype.enter = function() {
      ClerkLoginMode.__super__.enter.apply(this, arguments);
      return this.switcher.setMenuEnabled(false);
    };

    ClerkLoginMode.prototype.actions = function() {
      return [
        [
          this.cfg.settings.clerkPrefix, (function(_this) {
            return function(code, prefix) {
              return Api.clerk_login({
                code: prefix + code,
                counter: _this.cfg.settings.counterCode
              }).then(_this.onResultSuccess, _this.onResultError);
            };
          })(this)
        ]
      ];
    };

    ClerkLoginMode.prototype.onResultSuccess = function(data) {
      var username;
      username = data["user"];
      this.cfg.settings.clerkName = username;
      console.log("Logged in as " + username + ".");
      if (data["receipts"] != null) {
        return this.multipleReceipts(data["receipts"]);
      } else if (data["receipt"] != null) {
        return this.activateReceipt(data["receipt"]);
      } else {
        return this.switcher.switchTo(CounterMode);
      }
    };

    ClerkLoginMode.prototype.onResultError = function(jqXHR) {
      if (jqXHR.status === 419) {
        console.log("Login failed: " + jqXHR.responseText);
        return;
      }
      return true;
    };

    ClerkLoginMode.prototype.activateReceipt = function(receipt) {
      return this.switcher.switchTo(CounterMode, receipt);
    };

    ClerkLoginMode.prototype.multipleReceipts = function(receipts) {
      var dialog, info, table, table_body;
      dialog = new Dialog();
      dialog.title.html('<span class="glyphicon glyphicon-warning-sign text-warning"></span> Multiple receipts active');
      info = $("<div>").text("Please select receipt, which you want to continue.");
      table_body = $("<tbody>");
      this._createReceiptTable(receipts, dialog, table_body);
      table = $('<table class="table table-striped table-hover table-condensed">').append(table_body);
      dialog.body.append(info, table);
      dialog.addPositive().text("Select").click((function(_this) {
        return function() {
          var index;
          index = table_body.find(".success").data("index");
          if (index != null) {
            console.log(("Selected " + (1 + index) + ": ") + receipts[index].start_time);
            return _this.switcher.switchTo(CounterMode, receipts[index]);
          }
        };
      })(this));
      dialog.setEnabled(dialog.btnPositive, false);
      dialog.addNegative().text("Cancel").click(function() {
        return console.log("Cancelled receipt selection");
      });
      return dialog.show({
        keyboard: false,
        backdrop: "static"
      });
    };

    ClerkLoginMode.prototype._createReceiptTable = function(receipts, dialog, table_body) {
      var i, receipt, row, _i, _len;
      for (i = _i = 0, _len = receipts.length; _i < _len; i = ++_i) {
        receipt = receipts[i];
        row = $("<tr>");
        row.append($("<td>").text(i + 1), $("<td>").text(DateTimeFormatter.datetime(receipt.start_time)), $("<td>").text(receipt.total.formatCents()), $("<td>").text(receipt.counter));
        row.click(function() {
          table_body.find(".success").removeClass("success");
          $(this).addClass("success");
          return dialog.setEnabled(dialog.btnPositive);
        });
        row.data("index", i);
        table_body.append(row);
      }
      return table_body;
    };

    return ClerkLoginMode;

  })(CheckoutMode);

}).call(this);
